syntax = "proto3";

package msg;

// 错误返回
enum ErrorCode {
	Verify = 0;						// 服务器校验错误
	LoginDuplicate = 1;				// 账号重复登录，旧的账号会被T出
}

message Common_Err {
	string Desc = 1;				// 错误描述
	ErrorCode Code = 2;				// 错误码
}

// Tips
enum TipPos {
	Center = 0;						// 0 中间飘字
	Lamp = 1;						// 0x1 跑马灯
	Win = 2;						// 0x2 弹窗
}

message Common_Tip {
	TipPos Pos = 1;					// 位置类型
	string Tips = 2;				// Tips串
}

// 客户端报错
message Common_ClientErr {
	string Dump = 1;				// 客户端报错堆栈信息
}

// 心跳
message Common_Heartbeat {
	int32 Cnt = 1;					// 发送次数计数
}

// 登录
enum LoginCode {
	Success 			= 0;		// 成功
	AccountIllegal 		= 1;		// 账号非法
	DBErr		 		= 2;		// 数据库错误
	NoService		 	= 3;		// 服务器维护中
}

message LoginTest {
	string Acount = 1;						// 账号，64字节
	string Nick = 2;						// 昵称
	//string Device = 3;
	//string DeviceUUID = 4;
	string MobileOS = 5;
	//string MobileCompany = 6;
	string Timezone = 7;					// 时区
	string RobotKey = 8;					// 机器人码
}

message LoginRet {
	LoginCode RetCode 			= 1;		// 登录结果码
	string RetDesc 				= 2;		// 登录结果描述
	repeated MultiAttr Attrs 	= 3;		// 玩家属性集
	int64 SvrTime				= 4;		// 服务器时间(ms)，客户端可以保存服务器时间戳与客户端时间戳间隔，之后的客户端时间戳
											// 获取时都会减去间隔，得到与服务器一致的时间戳
}

// 属性类型
enum AttrType {
	//option allow_alias 	= true;
	Attr_UID				= 0;		// 玩家UID，in32
	Attr_Account 			= 1;		// 玩家账号，string
	Attr_Nick				= 2;		// 玩家昵称，string
	Attr_Level				= 3;		// 玩家等级，int32
	Attr_Exp				= 4;		// 玩家经验，int32
	Attr_Gold				= 5;		// 玩家金币，int64
	Attr_Diamond			= 6;		// 玩家钻石，int32

	Attr_CannonID1			= 7;		// 玩家新手场加农炮ID，int32
	Attr_CannonID2			= 8;		// 玩家初级场加农炮ID，int32
	Attr_CannonID3			= 9;		// 玩家中级场加农炮ID，int32
	Attr_CannonID4			= 10;		// 玩家高级场加农炮ID，int32

	Attr_JPRoll1			= 11;		// 玩家新手场幸运抽奖进度，int32
	Attr_JPRoll2			= 12;		// 玩家初级场幸运抽奖进度，int32
	Attr_JPRoll3			= 13;		// 玩家中级场幸运抽奖进度，int32
	Attr_JPRoll4			= 14;		// 玩家高级场幸运抽奖进度，int32
}

// 属性标识，服务器使用
enum AttrFlag {
	Flag_Null		= 0;

	Level			= 1;			// 0x1
	Exp				= 2;			// 0x2
	Gold			= 4;			// 0x4
	Diamond			= 8;			// 0x8

	Abandon			= 16;			// 0x10
	CannonID		= 32;			// 0x20
	Ratio			= 64;			// 0x40
	JPRoll			= 128;			// 0x80

	Status			= 256;			// 0x100
	Effect			= 512;			// 0x200

	Vip				= 1024;			// 0x400
}

// 更新单个属性，int32类型
message SigleAttr_int32 {
	AttrType Type 	= 1;
	int32 Val 		= 2;
}
// 更新单个属性，int64类型
message SigleAttr_int64 {
	AttrType Type 	= 1;
	int64 Val 		= 2;
}
// 更新单个属性，string类型
message SigleAttr_string {
	AttrType Type 	= 1;
	string Val 		= 2;
}
// 更新多个属性
message MultiAttr {
	repeated SigleAttr_int32 Attr_int32 	= 1;
	repeated SigleAttr_int64 Attr_int64 	= 2;
	repeated SigleAttr_string Attr_string 	= 3;
}
